#pragma kernel Add

#include "../FluidFieldOperator.hlsl"
#include "../../SDFUtility.hlsl"

// Properties
float3 _AddPositionA;
float3 _AddPositionB;
float _AddRadius;

float _AddStrength;
float _AddDensity;

float _UseCurl;

[numthreads(ThreadBlockSize,ThreadBlockSize,ThreadBlockSize)]
void Add (uint3 id : SV_DispatchThreadID)
{
    const float3 lineVector = _AddPositionB - _AddPositionA;
    if(dot(lineVector, lineVector) == 0) return;
    
    float3 worldPos = WorldPosFromId(id, _FluidResolution, _FluidCenter, _FluidBounds);

    float dist = sdfLine(_AddPositionA, _AddPositionB, 0, worldPos);
    dist = falloffSquare(dist, _AddRadius);

    
    float3 addDirection = normalize(lineVector);
    
    float3 curlVector = sdfLine_Vector(_AddPositionA, _AddPositionB, worldPos);
    addDirection = lerp(addDirection, cross(addDirection, normalize(curlVector)), _UseCurl);
    
    float3 addVel = addDirection * dist * _AddStrength * _dt;
    float addDensity = dist * _AddDensity * _dt;
    
    half4 f = _FluidVolume[id.xyz];

    f.xyz += addVel;
    f.w += addDensity;
    
    _FluidVolume[id.xyz] = f;
}