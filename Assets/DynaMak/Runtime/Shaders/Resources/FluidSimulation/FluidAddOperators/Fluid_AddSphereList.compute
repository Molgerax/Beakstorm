#pragma kernel Add

#include "../FluidFieldOperator.hlsl"

struct AddSphereInfo
{
    float3 position;
    float3 direction;
    float strength;
    float radius;
    float density;
};

// Properties
float3 _AddPosition;
float3 _AddDirection;
float _AddStrength;
float _AddRadius;
float _AddDensity;

StructuredBuffer<AddSphereInfo> _InfoBuffer;
uint _InfoLength;

[numthreads(ThreadBlockSize,ThreadBlockSize,ThreadBlockSize)]
void Add (uint3 id : SV_DispatchThreadID)
{
    float3 worldPos = WorldPosFromId(id, _FluidResolution, _FluidCenter, _FluidBounds);

    float3 addVel = 0;
    float addDensity = 0;

    for (uint i = 0; i < _InfoLength; i++)
    {
        AddSphereInfo info = _InfoBuffer[i];
        
        float dist = distance(info.position, worldPos);
        dist = smoothstep(info.radius, 0, dist);

        addVel += info.direction * dist * info.strength * _dt;
        addDensity += dist * info.density * _dt;
    }

    half4 f = _FluidVolume[id.xyz];

    f.xyz += addVel;
    f.w += addDensity;
    
    _FluidVolume[id.xyz] = f;
}