#pragma kernel Add

#include "../FluidFieldOperator.hlsl"
#include "../../SDFUtility.hlsl"

// Properties
float _AddStrength;
float _AddRadius;
float _AddDensity;

float _VelocityToDensity;
float _UseCurl;


[numthreads(ThreadBlockSize,ThreadBlockSize,ThreadBlockSize)]
void Add (uint3 id : SV_DispatchThreadID)
{   
    float3 velocity = (_WorldPos - _WorldPosOld) / _dt;
    if(dot(velocity, velocity) == 0) return;
    

    float3 worldPos = WorldPosFromId(id, _FluidResolution, _FluidCenter, _FluidBounds);

    float dist = sdfLine(_WorldPos, _WorldPosOld, 0, worldPos);
    //dist = smoothstep(_AddRadius, 0, dist);
    dist = falloffSquare(dist, _AddRadius);

    float velocityLength = length(velocity);
    float3 addDirection = velocity / velocityLength;
    
    float speedFactor = lerp(1, velocityLength * _dt * _VelocityToDensity, 1-step(_VelocityToDensity, 0));

    
    float3 curlVector = sdfLine_Vector(_WorldPos, _WorldPosOld, worldPos);
    addDirection = lerp(addDirection, cross(addDirection, normalize(curlVector)), _UseCurl);
    
    float3 addVel = addDirection * velocityLength * dist * _AddStrength * _dt;
    float addDensity = speedFactor * dist * _AddDensity * _dt;

    
    half4 f = _FluidVolume[id.xyz];

    f.xyz += addVel;
    f.w += addDensity;
    
    _FluidVolume[id.xyz] = f;
}