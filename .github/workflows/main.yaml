name: Build project

on: [push, pull_request]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - name: Apply csc.rsp (pre-processor symbols)
        run: echo -define:UNITY_EDITOR_LINUX >> Assets/csc.rsp
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 2
  deploy:
    name: Deploy
    #needs: buildForAllSupportedPlatforms
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      #- name: Download artifact
      #  uses: actions/download-artifact@main
      #  with:
      #    name: Build-${{ matrix.targetPlatform }}
      #    path: build/${{ matrix.targetPlatform }}
      - name: Limit Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Sync files to hosting
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PW }}
          protocol: ftps
          #local-dir: ./build/${{ matrix.targetPlatform }}
          local-dir: ./Assets/Aptabase/
          server-dir: files/Builds/

  deploy2:
    name: Deploy Again
    #needs: buildForAllSupportedPlatforms
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      #- name: Download artifact
      #  uses: actions/download-artifact@main
      #  with:
      #    name: Build-${{ matrix.targetPlatform }}
      #    path: build/${{ matrix.targetPlatform }}
      - name: Sync files to hosting
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PW }}
          remoteDir: "files/Builds"
          localDir: "Assets/Aptabase"
